public class Solution {
    public int longestValidParentheses(String s) {
        if(s == null || s.length()<=1){
            return 0;
        }
        int[] dp = new int[s.length()];
        int pre = 0;
        int res = 0;
        for(int i =1; i<s.length(); i++){
            if(s.charAt(i) == ')'){
                pre = i-1 - dp[i-1];
                if(pre >=0 && s.charAt(pre) == '('){
                    dp[i] = dp[i-1] + 2 + (pre > 0 ? dp[pre -1]: 0); 
                }
            }
            res = Math.max(res, dp[i]);
        }
        return res;
    }
}

Time : O(n)
Space : O(n)