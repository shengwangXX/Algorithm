/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1 == null || l2 == null){
            return l1== null ? l2 : l1;
        }
        ListNode preHead = new ListNode(0);
        ListNode node1 = l1;
        ListNode node2 = l2;
        ListNode tail = preHead;
        ListNode tmp1 = null;
        ListNode tmp2 = null;
        while(node1!=null && node2 != null){
            if(node1.val <= node2.val){
                tmp1 = node1.next;
                node1.next = null;
                tail.next = node1;
                tail = node1;
                node1 = tmp1;
            }
            else{
                tmp2 = node2.next;
                node2.next = null;
                tail.next = node2;
                tail = node2;
                node2 = tmp2;
            }
        }
        if(node1 != null){
            tail.next = node1;
        }
        else{
            tail.next = node2;
        }
        return preHead.next;
        
    }
    
}