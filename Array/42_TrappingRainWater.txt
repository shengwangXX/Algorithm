public class Solution {
    public int trap(int[] height) {
        if(height == null || height.length == 0){
            return 0;
        }
        int[] water = new int[height.length];
        //water[0] = height[0];
        int max = 0;
        for(int i = 1; i<=height.length-2; i++){
            max = height[i-1] > max ? height[i-1] : max;
            water[i] = max;
        }
        max = 0; 
        for(int i = height.length-2 ; i>=1; i--){
            max = height[i+1] > max ? height[i+1]: max;
            water[i] = max < water[i] ? max : water[i] ;
        }
        int sum =0;
        for(int i =1; i <= height.length -2; i++){
            sum+= Math.max(water[i] - height[i], 0);
        }
        
        return sum;   
    }
}

Time : O(n)
Space : O(n)